<?xml version="1.0"?>
<launch>
  <!-- Arguments -->
  <arg name="slam_method" default="gmapping" doc="slam_method type [gmapping, hector, cartographer]"/>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="open_rviz" default="true"/>
  <arg name="robot_name" default="turtlebot3"/>
  <arg name="trajectory_topic" default="trajectory"/>
  
  <!-- Turtlebot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>
  
  <!-- Ground truth từ Gazebo -->
  <include file="$(find custom_robot)/launch/gazebo_ground_truth.launch">
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="output_frame" value="map"/>
  </include>
  
  <!-- Trajectory publisher để thu thập quỹ đạo ước tính từ SLAM -->
  <node pkg="custom_robot" type="publish_trajectories.py" name="trajectory_publisher" output="screen">
    <param name="gt_frame" value="map"/>
    <param name="slam_frame" value="map"/>
    <param name="robot_frame" value="base_footprint"/>
    <param name="out_topic" value="/ground_truth/path"/>
    <param name="slam_topic" value="/$(arg slam_method)/$(arg trajectory_topic)"/>
  </node>
  
  <!-- Run SLAM algorithms -->
  <group if="$(eval slam_method == 'gmapping')">
    <include file="$(find custom_robot)/launch/fixed_size_gmapping.launch">
      <arg name="open_rviz" value="false"/>
    </include>
  </group>

  <group if="$(eval slam_method == 'hector')">
    <include file="$(find custom_robot)/launch/fixed_size_hector.launch">
      <arg name="open_rviz" value="false"/>
    </include>
  </group>
  
  <!-- RViz for visualization -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find custom_robot)/rviz/ground_truth.rviz"/>
  </group>
</launch>